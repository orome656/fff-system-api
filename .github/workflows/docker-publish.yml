name: Docker

on:
  push:
    branches:
      - master
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: fff-system-api

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
    needs: push
    steps:
      - name: deploy to server
        env:
          USERNAME: ${{ secrets.Username }}
          SERVER: ${{ secrets.Server }}
          KEY: ${{ secrets.Key }}
        run: |
          echo "$KEY" > private_key.ppk && chmod 600 private_key.ppk
          ssh-keyscan "$SERVER" >> ~/.ssh/known_hosts
          ssh -i private_key.ppk "$USERNAME"@"$SERVER" docker pull docker.pkg.github.com/orome656/fff-system-api/fff-system-api:latest
          ssh -i private_key.ppk "$USERNAME"@"$SERVER" docker stop fff-system || true && docker rm fff-system || true
          ssh -i private_key.ppk "$USERNAME"@"$SERVER" docker run --name fff-system -p 5000:5000 --restart unless-stopped docker.pkg.github.com/orome656/fff-system-api/fff-system-api:latest
